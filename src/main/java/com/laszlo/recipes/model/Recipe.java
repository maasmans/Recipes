package com.laszlo.recipes.model;

import com.laszlo.recipes.service.RecipeService;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import java.util.ArrayList;
import java.util.List;

@Entity
@Getter
@Setter
@Builder
@AllArgsConstructor
@NoArgsConstructor
public class Recipe {

    /**
     * Id generated by postgres with a sequence table.
     */
    @Id
    @SequenceGenerator(name="pk_sequence",sequenceName="recipe_seq", allocationSize=1)
    @GeneratedValue(strategy=GenerationType.SEQUENCE,generator="pk_sequence")
    private Integer id;

    /**
     * The name of the recipe.
     */
    private String name;

    /**
     * What kind of ingredients the recipe contains.
     */
    @Enumerated(EnumType.STRING)
    private DishSpecification dishSpecification;

    /**
     * The number of servings.
     */
    private int servings;

    /**
     * The instructions, how the recipe is to be made.
     * {@link RecipeService} contains methods for text search within
     * this field.
     */
    private String instructions;

    @Builder.Default
    @OneToMany(mappedBy = "recipe", orphanRemoval = true, cascade = CascadeType.ALL, fetch = FetchType.EAGER)
    private List<Ingredient> ingredients = new ArrayList<>();

}
